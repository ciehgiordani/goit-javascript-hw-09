{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,kBAASC,EAAcC,EAAUC,GACTC,KAAKC,Q,CAU7B,MAAMC,EAASC,SAASC,cAAc,SACtC,IAAIC,EAAW,KACXC,EAAU,KACVC,EAAY,KAEhB,SAASV,EAAcC,EAAUC,GAC/B,OAAO,IAAIS,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaX,KAAKC,SAAW,GAEpCQ,EAAQ,C,SAAEX,E,MAAUC,IAEpBW,EAAO,C,SAAEZ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA8BbG,EAAOU,iBAAiB,UA1BFC,IACpBA,EAAEC,iBACGD,EAAEE,OAAOC,QAEd,MACEC,UAAYlB,MAAAmB,EAAKC,KAAEA,EAAIC,OAAEA,IACvBP,EAAEQ,cAENhB,EAAWiB,OAAOJ,EAAMK,OACxBjB,EAAUgB,OAAOH,EAAKI,OACtBhB,EAAYe,OAAOF,EAAOG,OAE1B,IAAK,IAAIC,EAAI,EAAGA,GAAKjB,EAAWiB,IAC9B3B,EAAc2B,EAAGnB,GACdoB,MAAK,EAAC3B,SAAEA,EAAQC,MAAEA,MACjBJ,EAAA+B,OAAOC,QAAQ,uBAAqB7B,QAAiBC,MAAU,IAEhE6B,OAAM,EAAC9B,SAAEA,EAAQC,MAAEA,MAClBJ,EAAA+B,OAAOG,QAAQ,sBAAoB/B,QAAeC,MAAU,IAGhEM,GAAYC,EAGdO,EAAEQ,cAAcS,OAAO","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n  } else {\n    // Reject\n  }\n}\n\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form');\nlet delayInp = null;\nlet stepInp = null;\nlet amountInp = null;\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst submitHandler = e => {\n  e.preventDefault();\n  if (!e.target.tagName === 'BUTTON') return;\n\n  const {\n    elements: { delay, step, amount },\n  } = e.currentTarget;\n\n  delayInp = Number(delay.value);\n  stepInp = Number(step.value);\n  amountInp = Number(amount.value);\n\n  for (let i = 1; i <= amountInp; i++) {\n    createPromise(i, delayInp)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    delayInp += stepInp;\n  }\n\n  e.currentTarget.reset();\n};\nformEl.addEventListener('submit', submitHandler);"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Math","random","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$delayInp","$47d4ff9957288465$var$stepInp","$47d4ff9957288465$var$amountInp","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","target","tagName","elements","delay1","step","amount","currentTarget","Number","value","i","then","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.d65d2c52.js.map"}